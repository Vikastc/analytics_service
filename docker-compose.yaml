version: "3.8"

services:
    dhiagent:
        image: analytics:latest
        container_name: analytics
        environment:
            - PORT=${AGENT_PORT}
            - TYPEORM_HOST=${STUDIO_TYPEORM_HOST}
            - TYPEORM_PORT=${TYPEORM_PORT}
            - TYPEORM_USERNAME=${STUDIO_TYPEORM_USERNAME}
            - TYPEORM_PASSWORD=${STUDIO_TYPEORM_PASSWORD}
            - TYPEORM_DATABASE=${STUDIO_TYPEORM_DATABASE}
            - TYPEORM_AUTO_SCHEMA_SYNC=${STUDIO_TYPEORM_AUTO_SCHEMA_SYNC}
            - TYPEORM_ENTITIES=${STUDIO_TYPEORM_ENTITIES}
            - TYPEORM_SUBSCRIBERS=${STUDIO_TYPEORM_SUBSCRIBERS}
            - TYPEORM_MIGRATIONS=${STUDIO_TYPEORM_MIGRATIONS}
            - TYPEORM_ENTITIES_DIR=${STUDIO_TYPEORM_ENTITIES_DIR}
            - TYPEORM_MIGRATIONS_DIR=${STUDIO_TYPEORM_MIGRATIONS_DIR}
            - TYPEORM_SUBSCRIBERS_DIR=${STUDIO_TYPEORM_SUBSCRIBERS_DIR}
            - TYPEORM_LOGGING=${STUDIO_TYPEORM_LOGGING}
        ports:
            - ${AGENT_PORT}:${AGENT_PORT}
        depends_on:
            - postgres40
        networks:
            - local
        command: npm run prod

    # redis:
    #     image: redis:latest
    #     container_name: redis_container
    #     ports:
    #         - 6379:6379
    #     networks:
    #         - local

    postgres40:
        image: timescale/timescaledb:2.9.1-pg12
        container_name: postgres40
        environment:
            POSTGRES_USER: ${STUDIO_TYPEORM_USERNAME}
            POSTGRES_PASSWORD: ${STUDIO_TYPEORM_PASSWORD}
            POSTGRES_DB: ${STUDIO_TYPEORM_DATABASE}
            PGDATA: /var/lib/postgresql/data/pgdata
        ports:
            - ${STUDIO_TYPEORM_PORT}:${TYPEORM_PORT}
        restart: always
        volumes:
            - postgres-data40:/var/lib/postgresql/data
        networks:
            - local

volumes:
    postgres-data40:
        name: postgres-data40

networks:
    local:
        name: local
